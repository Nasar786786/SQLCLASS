const { faker } = require("@faker-js/faker");
const mysql = require("mysql2");
const express = require("express");
const app = express();
const path = require("path");
const methodOverride = require("method-override");

app.use(methodoverride("_method"));
app.set("view engine", "ejs");
app.set("views", path.join(__dirame, "/view"));

const connection =  mysql.createConnection({
    host: "localhost",
    user: "root",
    database: "delta_app",
    password: "8789849129",
  });

  let getRandomUser = () =>  {
    return [
       faker.datatype.uuid(),
       faker.internet.userName(),
       faker.internet.email(),
       faker.internet.password(),
];
  };

//Show Route
app.get("/", (req, res) => {
    Let q = `SELECT * FROM user`;

    try {

        connection.query(q, (err, users)  => {
                   if(err) throw err;
                 res.render("showusers.ejs", {users});
        });
      } catch (err) {
         // console.log(err);
          res.send("some error is DB");
      }
      });

      //Edit Route 
      app.get("/user/:id/edit", (req, res) => {
        Let { id } = req.params;
        Let q = `SELECT * FROM user WHERE id='${id}'`;

      });
      try {

        connection.query(q, (err, result)  => {
                   if(err) throw err;
                 res.render("edit.ejs");
        });
      } catch (err) {
          console.log(err);
          res.send("some error in DB");
      }
      });

      //UPDATE (DB) Route
      app.patch("/user/:" , (req, res) => {
        Let { id } = req.params;
        Let {password: formPass, username: newUsername } = req.body;
        Let q = `SELECT * FROM user WHERE id = '${id}'`;

        try {
          connection.query(q, (err, result) => {
            if (err) throw err;
            let user= result[0];
            if (formPass != user.password) {
              res.send("WORNG password");
            } else {
              let q2 = `UPDATE user SET username='${newUsername}' WHERE id= '${id}'`;
              connection.query(q2, (err, result) => {
                if (err) throw err;
                res.redirect("/user");
              });
            }
          });
        } catch (err) {
          console.log(err);
          res.send("some error in DB");
        }
      });


app.listen("8080", () => {
    console.log("server is listening to port 8080");

});


